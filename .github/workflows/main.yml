# This is a basic workflow to help you get started with Actions

name: SOC_SIGMA_AUTOMATION

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]      

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: SigmaHQ/pySigma
          path: './pysigma'
      
      - name: setup python 3.8
        uses: actions/setup-python@v1
        with: 
          python-version: 3.8
      
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          cd $GITHUB_WORKSPACE/pysigma
          poetry install

      - id: get-new-files
        uses: jitterbit/get-changed-files@v1
        
      - name: run tests
        run: |
          cd pysigma
          for changed_file in ${{ steps.get-new-files.outputs.added }}
          do
            poetry run sigma-converter --backend splunk -n --config crowdstrike ../${changed_file} > ../${changed_file}_cs_converted
          done

      - name: Commit files
        id: commit
        run: |
          git config --local user.email "zainimran@outlook.com"
          git config --local user.name "Zain Imran"
          git add .
          git commit -m "Committing converted rule"
          echo "::set-output name=push::true"
        
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}